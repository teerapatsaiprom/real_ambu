basePath: /api/v1
definitions:
  controllers.Predicament:
    properties:
      addedTime:
        type: string
      carID:
        type: integer
      staffID:
        type: integer
      statuscarID:
        type: integer
      userID:
        type: integer
    type: object
  ent.Car:
    properties:
      car_no:
        description: CarNo holds the value of the "car_no" field.
        type: string
      edges:
        $ref: '#/definitions/ent.CarEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the CarQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.CarEdges:
    properties:
      carPredicament:
        description: CarPredicament holds the value of the car_predicament edge.
        items:
          $ref: '#/definitions/ent.Predicament'
        type: array
    type: object
  ent.Predicament:
    properties:
      Added_Time:
        description: AddedTime holds the value of the "Added_Time" field.
        type: string
      edges:
        $ref: '#/definitions/ent.PredicamentEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PredicamentQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.PredicamentEdges:
    properties:
      car:
        $ref: '#/definitions/ent.Car'
        description: Car holds the value of the Car edge.
        type: object
      staff:
        $ref: '#/definitions/ent.Staff'
        description: Staff holds the value of the Staff edge.
        type: object
      statuscar:
        $ref: '#/definitions/ent.Statuscar'
        description: Statuscar holds the value of the Statuscar edge.
        type: object
      user:
        $ref: '#/definitions/ent.User'
        description: User holds the value of the User edge.
        type: object
    type: object
  ent.Staff:
    properties:
      edges:
        $ref: '#/definitions/ent.StaffEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the StaffQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      staff_email:
        description: StaffEmail holds the value of the "staff_email" field.
        type: string
      staff_name:
        description: StaffName holds the value of the "staff_name" field.
        type: string
      staff_password:
        description: StaffPassword holds the value of the "staff_password" field.
        type: string
    type: object
  ent.StaffEdges:
    properties:
      staffPredicament:
        description: StaffPredicament holds the value of the staff_predicament edge.
        items:
          $ref: '#/definitions/ent.Predicament'
        type: array
    type: object
  ent.Statuscar:
    properties:
      edges:
        $ref: '#/definitions/ent.StatuscarEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the StatuscarQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      status_detail:
        description: StatusDetail holds the value of the "status_detail" field.
        type: string
    type: object
  ent.StatuscarEdges:
    properties:
      statuscarPredicament:
        description: StatuscarPredicament holds the value of the statuscar_predicament edge.
        items:
          $ref: '#/definitions/ent.Predicament'
        type: array
    type: object
  ent.User:
    properties:
      edges:
        $ref: '#/definitions/ent.UserEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the UserQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      user_email:
        description: UserEmail holds the value of the "user_email" field.
        type: string
      user_name:
        description: UserName holds the value of the "user_name" field.
        type: string
      user_password:
        description: UserPassword holds the value of the "user_password" field.
        type: string
    type: object
  ent.UserEdges:
    properties:
      userPredicament:
        description: UserPredicament holds the value of the user_predicament edge.
        items:
          $ref: '#/definitions/ent.Predicament'
        type: array
    type: object
  gin.H:
    additionalProperties: true
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for SUT SE 2563
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SUT SA Example API
  version: "1.0"
paths:
  /Staffs/{id}:
    delete:
      description: get staff by ID
      operationId: delete-staff
      parameters:
      - description: Staff ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a staff entity by ID
  /cars:
    get:
      description: list car entities
      operationId: list-car
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Car'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List car entities
    post:
      consumes:
      - application/json
      description: Create car
      operationId: create-car
      parameters:
      - description: Car entity
        in: body
        name: car
        required: true
        schema:
          $ref: '#/definitions/ent.Car'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Car'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create car
  /cars/{id}:
    delete:
      description: get car by ID
      operationId: delete-car
      parameters:
      - description: Car ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a car entity by ID
    get:
      description: get car by ID
      operationId: get-car
      parameters:
      - description: Car ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Car'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a car entity by ID
    put:
      consumes:
      - application/json
      description: update car by ID
      operationId: update-car
      parameters:
      - description: Car ID
        in: path
        name: id
        required: true
        type: integer
      - description: Car entity
        in: body
        name: car
        required: true
        schema:
          $ref: '#/definitions/ent.Car'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Car'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a car entity by ID
  /predicaments:
    get:
      description: list predicament entities
      operationId: list-predicament
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Predicament'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List predicament entities
    post:
      consumes:
      - application/json
      description: Create predicament
      operationId: create-predicament
      parameters:
      - description: Predicament entity
        in: body
        name: predicament
        required: true
        schema:
          $ref: '#/definitions/controllers.Predicament'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Predicament'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create predicament
  /predicaments/{id}:
    delete:
      description: get predicament by ID
      operationId: delete-predicament
      parameters:
      - description: Predicament ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a predicament entity by ID
  /staffs:
    get:
      description: list staff entities
      operationId: list-staff
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Staff'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List staff entities
    post:
      consumes:
      - application/json
      description: Create staff
      operationId: create-staff
      parameters:
      - description: Staff entity
        in: body
        name: Staff
        required: true
        schema:
          $ref: '#/definitions/ent.Staff'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Staff'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create staff
  /staffs/{id}:
    get:
      description: get staff by ID
      operationId: get-staff
      parameters:
      - description: Staff ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Staff'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a staff entity by ID
    put:
      consumes:
      - application/json
      description: update staff by ID
      operationId: update-staff
      parameters:
      - description: Staff ID
        in: path
        name: id
        required: true
        type: integer
      - description: Staff entity
        in: body
        name: staff
        required: true
        schema:
          $ref: '#/definitions/ent.Staff'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Staff'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a staff entity by ID
  /statuscars:
    get:
      description: list statuscar entities
      operationId: list-statuscar
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Statuscar'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List statuscar entities
    post:
      consumes:
      - application/json
      description: Create statuscar
      operationId: create-statuscar
      parameters:
      - description: Statuscar entity
        in: body
        name: statuscar
        required: true
        schema:
          $ref: '#/definitions/ent.Statuscar'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Statuscar'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create statuscar
  /statuscars/{id}:
    delete:
      description: get statuscar by ID
      operationId: delete-statuscar
      parameters:
      - description: Statuscar ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a statuscar entity by ID
    get:
      description: get statuscar by ID
      operationId: get-statuscar
      parameters:
      - description: Statuscar ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Statuscar'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a statuscar entity by ID
    put:
      consumes:
      - application/json
      description: update statuscar by ID
      operationId: update-statuscar
      parameters:
      - description: Statuscar ID
        in: path
        name: id
        required: true
        type: integer
      - description: Statuscar entity
        in: body
        name: statuscar
        required: true
        schema:
          $ref: '#/definitions/ent.Statuscar'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Statuscar'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a statuscar entity by ID
  /users:
    get:
      description: list user entities
      operationId: list-user
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List user entities
    post:
      consumes:
      - application/json
      description: Create user
      operationId: create-user
      parameters:
      - description: User entity
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/ent.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create user
  /users/{id}:
    delete:
      description: get user by ID
      operationId: delete-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a user entity by ID
    get:
      description: get user by ID
      operationId: get-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a user entity by ID
    put:
      consumes:
      - application/json
      description: update user by ID
      operationId: update-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User entity
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/ent.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a user entity by ID
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
